#include <stdio.h>
#include <conio.h>

void kruskals();
int c[10][10], n;

void main()
{
    int i, j;
    clrscr();

    printf("\nEnter the number of vertices:\t");
    scanf("%d", &n);

    printf("\nEnter the cost matrix (9999 for no edge):\n");
    for(i = 1; i <= n; i++)
    {
        for(j = 1; j <= n; j++)
        {
            scanf("%d", &c[i][j]);
        }
    }

    kruskals();

    getch();
}

void kruskals()
{
    int i, j, u, v, a, b, min;
    int ne = 0, mincost = 0;
    int parent[10];

    for(i = 1; i <= n; i++)
    {
        parent[i] = 0;
    }

    while(ne < n - 1)
    {
        min = 9999;

        // Find minimum cost edge
        for(i = 1; i <= n; i++)
        {
            for(j = 1; j <= n; j++)
            {
                if(c[i][j] < min)
                {
                    min = c[i][j];
                    a = u = i;
                    b = v = j;
                }
            }
        }

        // Find parent of u
        while(parent[u] != 0)
        {
            u = parent[u];
        }

        // Find parent of v
        while(parent[v] != 0)
        {
            v = parent[v];
        }

        if(u != v)
        {
            // Edge is accepted
            printf("\n%d -----> %d = %d", a, b, min);
            parent[v] = u;
            ne = ne + 1;
            mincost = mincost + min;
        }

        // Mark edge as used
        c[a][b] = c[b][a] = 9999;
    }

    printf("\n\nMinimum cost = %d", mincost);
}
